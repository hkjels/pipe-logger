#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'

# Defaults
size      = 10 * 1024 ** 2
count     = 10
timestamp = false

oparser = OptionParser.new do |opts|
  opts.banner = "usage: #$0 [-s SIZE[k|m|g]] [-n #FILES] [-t] FILENAME"
  opts.on('-s SIZE', 'Maximum size of each file') do |s|
    num, suffix = s[0...-1], s[-1, 1]
    size =
      (num.to_f * 1024 ** (
        case s[-1, 1]
        when /k/i then 1
        when /m/i then 2
        when /g/i then 3
        else
          puts opts
          exit
        end)).to_i

    unless size > 0
      puts opts
      exit
    end
  end

  opts.on('-n COUNT', 'Number of files') do |n|
    unless (count = n.to_i) > 0
      puts opts
      exit
    end
  end

  opts.on('-t', 'Prepend timestamp') do |t|
    timestamp = t
  end
end

oparser.parse!

if ARGV.length != 1
  puts oparser
  exit
end

prefix = ARGV.first
bytes  = File.exists?(prefix) ? File.size?(prefix) : 0
file   = File.open(prefix, 'a')
begin
  while line = $stdin.gets
    line = Time.now.strftime("[%Y/%m/%d %H:%M:%S] ") << line if timestamp

    bytes += line.length
    if bytes > size
      file.close

      # Rotate files
      Dir["#{prefix}.*"].map { |fn|
        [fn, fn.match(/[0-9]+$/)[0].to_i]
      }.sort_by { |e| - e.last }.each do |pair|
        fn, index = pair
        if index < count
          FileUtils.mv fn, [prefix, index + 1].join('.')
        end
      end
      FileUtils.mv prefix, [prefix, 1].join('.')

      # Reopen
      file  = File.open(prefix, 'a')
      bytes = 0
    end

    file << line
  end
ensure
  file.close
end

